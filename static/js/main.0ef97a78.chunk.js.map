{"version":3,"sources":["images/logo.png","components/Navigation.js","components/Profile.js","business-logic/getGithubProjects.js","components/Projects.js","components/Abilities.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","renderTooltip","props","Tooltip","id","Navigation","Navbar","Brand","href","src","logo","alt","width","height","Toggle","Collapse","className","Text","OverlayTrigger","placement","delay","show","hide","overlay","Button","variant","target","rel","Profile","Jumbotron","fluid","style","background","Container","GetGithubProjects","a","fetch","response","json","data","console","log","reposWithPages","filter","row","has_pages","map","r","name","url","description","code","html_url","Projects","React","useState","repos","setRepos","useEffect","res","runner","Tab","defaultActiveKey","Row","Col","sm","ListGroup","Item","action","repo","Content","textAlign","Pane","eventKey","noBullets","paddingLeft","marginTop","listStyleType","Abilities","icon","faLaptopCode","faDatabase","faGlobe","faScroll","App","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.0ef97a78.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.b262adb0.png\";","import React from 'react';\r\nimport { Navbar, OverlayTrigger, Tooltip, Button} from 'react-bootstrap';\r\nimport logo from '../images/logo.png'\r\nfunction renderTooltip(props) {\r\n    return (\r\n      <Tooltip id=\"button-tooltip\" {...props}>\r\n        saurabh@khatiwada.dev\r\n      </Tooltip>\r\n    );\r\n}\r\n\r\nexport default function Navigation() {\r\n    return (\r\n        <div>\r\n            <Navbar>\r\n                <Navbar.Brand href=\"#home\">\r\n                    <img src={logo} alt=\"SK Logo\" width='36' height='36' />\r\n                    &nbsp; &nbsp;khatiwada.dev\r\n                    </Navbar.Brand>\r\n                <Navbar.Toggle />\r\n                <Navbar.Collapse className=\"justify-content-end\">\r\n                    <Navbar.Text>\r\n                    <OverlayTrigger\r\n                            placement=\"right\"\r\n                            delay={{ show: 250, hide: 400 }}\r\n                            overlay={renderTooltip}>\r\n                            <Button href='mailto:saurabh@khatiwada.dev' variant=\"outline-success\">Email</Button>\r\n                        </OverlayTrigger>\r\n                        &nbsp;&nbsp;&nbsp;\r\n                        <a href=\"https://www.linkedin.com/in/saurabhkhatiwada/\" target=\"_blank\" rel=\"noopener noreferrer\" >LinkedIn</a>\r\n                        &nbsp;&nbsp;&nbsp;\r\n                        <a href=\"https://github.com/skhati1/\" target=\"_blank\" rel=\"noopener noreferrer\">Github</a>\r\n\r\n                    </Navbar.Text>\r\n                </Navbar.Collapse>\r\n            </Navbar>\r\n        </div>\r\n    );\r\n}\r\n","import React from 'react';\r\nimport { Jumbotron, Container } from 'react-bootstrap';\r\n\r\nexport default function Profile() {\r\n    return (\r\n        <div>\r\n            <Jumbotron fluid style={{background: 'none'}}>\r\n                <Container>\r\n                    <h1>Saurabh Khatiwada</h1>\r\n                    <span>\r\n                    A Full Stack Software Engineer with a keen eye for effective software architecture and developer process improvement. \r\n                    </span>\r\n                </Container>\r\n            </Jumbotron>\r\n        </div>\r\n    );\r\n}\r\n","export async function GetGithubProjects () {\r\n    const url = `https://api.github.com/users/skhati1/repos`\r\n    const response = await fetch(url)\r\n    const data = await response.json()\r\n    console.log(data)\r\n    const reposWithPages = data.filter(row => row.has_pages).map(r => { \r\n        return {\r\n            name: r.name, \r\n            url: `https://skhati1.github.io/${r.name}`,\r\n            description: r.description,\r\n            code: r.html_url\r\n        }\r\n    })\r\n    return reposWithPages\r\n}\r\n","import React from 'react';\r\nimport { Tab, ListGroup, Row, Col } from 'react-bootstrap';\r\nimport { Button } from 'react-bootstrap';\r\nimport { GetGithubProjects } from '../business-logic/getGithubProjects';\r\n\r\nexport default function Projects() {\r\n    const [repos, setRepos] = React.useState([])\r\n    const contentTextAlign = {\r\n        textAlign: 'left'\r\n    }\r\n    React.useEffect(() => {\r\n        const runner = async () => {\r\n            const res = await GetGithubProjects()\r\n            setRepos(res)\r\n        }\r\n        runner()\r\n    }, [])\r\n    return (\r\n        <div>\r\n            <h4>Projects</h4>\r\n            <hr />\r\n            <Tab.Container id=\"list-group-tabs-example\" defaultActiveKey=\"#helloCloud\">\r\n                <Row>\r\n                    <Col sm={4}>\r\n                        <ListGroup>\r\n                            <ListGroup.Item action href=\"#helloCloud\">\r\n                                Hello Cloud\r\n                            </ListGroup.Item>\r\n                            {repos.map(repo =>\r\n                                <ListGroup.Item action href={`#${repo.name}`}>\r\n                                    {repo.name}\r\n                                </ListGroup.Item>\r\n                            )}\r\n                        </ListGroup>\r\n                    </Col>\r\n                    <Col sm={8}>\r\n                        <Tab.Content style={contentTextAlign}>\r\n                            <Tab.Pane eventKey=\"#helloCloud\">\r\n                                <p>A hands-on workshop designed for students of Towson University, along with <a href=\"https://www.codebyalex.com/\" target=\"_blank\" rel=\"noopener noreferrer\">Alex Wilson</a>, about the basics of cloud development using AWS with an emphasis on development in conjunction with DevOps.</p>\r\n                                <a href=\"https://github.com/CodeByAlex/HelloCloud\"><Button variant=\"outline-info\">Source Code</Button></a>\r\n                            </Tab.Pane>\r\n                            {repos.map(repo =>\r\n                                <Tab.Pane eventKey={`#${repo.name}`}>\r\n                                    <p>{repo.description ? repo.description : `Check out this project on its own live site!`}</p>\r\n                                    <Button href={repo.code} variant=\"outline-info\">Source Code</Button>\r\n                                    &nbsp;\r\n                                    <Button href={repo.url} variant=\"outline-info\">Live Demo</Button>\r\n                                </Tab.Pane>\r\n                            )}\r\n                        </Tab.Content>\r\n                    </Col>\r\n\r\n                </Row>\r\n            </Tab.Container>\r\n            <hr />\r\n        </div>\r\n    );\r\n}\r\n","import React from 'react';\r\nimport { Container, Row, Col } from 'react-bootstrap';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { faDatabase, faGlobe, faLaptopCode, faScroll } from '@fortawesome/free-solid-svg-icons';\r\n\r\nconst noBullets = {\r\n    textAlign: 'left',\r\n    paddingLeft: '40%',\r\n    marginTop: '20px',\r\n    listStyleType: 'circle'\r\n}\r\nexport default function Abilities() {\r\n    return (\r\n        <div>\r\n            <h4>Abilities</h4>\r\n            <br />\r\n            <Container>\r\n                <Row>\r\n                    <Col sm>\r\n                        <h1><FontAwesomeIcon icon={faLaptopCode} /></h1>\r\n                        <ul style={noBullets}>\r\n                            <li>.NET Core (C#)</li>\r\n                            <li>Node JS</li>\r\n                            <li>Java</li>\r\n                            <li>Python</li>\r\n                        </ul>\r\n                    </Col>\r\n                    <Col sm>\r\n                        <h1><FontAwesomeIcon icon={faDatabase} /></h1>\r\n                        <ul style={noBullets}>\r\n                            <li>Microsoft SQL Server</li>\r\n                            <li>PostgreSQL</li>\r\n                        </ul>\r\n                    </Col>\r\n                    <Col sm>\r\n                        <h1><FontAwesomeIcon icon={faGlobe} /></h1>\r\n                        <ul style={noBullets}>\r\n                            <li>ReactJs</li>\r\n                            <li>HTML5</li>\r\n                            <li>CSS3</li>\r\n                        </ul>\r\n                    </Col>\r\n                    <Col sm>\r\n                        <h1><FontAwesomeIcon icon={faScroll} /></h1>\r\n                        <ul style={noBullets}>\r\n                            <li>Bash</li>\r\n                            <li>Powershell</li>\r\n                        </ul>\r\n                    </Col>\r\n                </Row>\r\n\r\n            </Container>\r\n        </div >\r\n    );\r\n}\r\n","import React from 'react';\r\nimport './App.css';\r\nimport {Container, Row, Col } from 'react-bootstrap';\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nimport Navigation from './components/Navigation';\r\nimport Profile from './components/Profile';\r\nimport Projects from './components/Projects';\r\nimport Abilities from './components/Abilities';\r\n\r\nfunction App() {\r\n  return (\r\n    <div className=\"App\">\r\n      <Container>\r\n        <Row>\r\n          <Col sm>\r\n            <Navigation />\r\n          </Col>\r\n        </Row>\r\n        <Row>\r\n          <Col sm>\r\n            <Profile />\r\n          </Col>\r\n        </Row>\r\n        <Row>\r\n          <Col sm>\r\n            <Projects />\r\n          </Col>\r\n        </Row>\r\n        <Row>\r\n          <Col sm>\r\n            <Abilities />            \r\n          </Col>\r\n        </Row>\r\n      </Container>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' },\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then(registration => {\r\n        registration.unregister();\r\n      })\r\n      .catch(error => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}